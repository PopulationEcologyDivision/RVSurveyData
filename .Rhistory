tt <- tt %>%
group_by(YEAR, SEASON, SPEC) %>%
summarise(TOTNO = sum(TOTNO))
View(tt)
tt<- merge(GSDET, GSINF, by=c("MISSION","SETNO"), all.x=T)
tt<-tt[tt$SPEC %in% c(204,203,1191),]
tt<- merge(tt, GSMISSIONS, by=c("MISSION"), all.x=T)
head(tt)
tt <- tt[tt$FLEN <= 40,]
range(tt$FLEN)
tt<-tt[,c("YEAR", "SEASON", "SPEC", "TOTNO")]
names(tt)
tt<-tt[,c("YEAR", "SEASON", "SPEC", "FLEN", "CLEN")]
View(tt)
tt<-tt[,c("YEAR", "SEASON", "SPEC", "CLEN")]
tt <- tt %>%
group_by(YEAR, SEASON, SPEC) %>%
summarise(CLEN = sum(CLEN))
View(tt)
??dcast
reshape2::dcast(tt, YEAR+SEASON ~ SPEC, value.var = "CLEN")
tt<-reshape2::dcast(tt, YEAR+SEASON ~ SPEC, value.var = "CLEN")
View(tt)
tt<- merge(GSDET, GSINF, by=c("MISSION","SETNO"), all.x=T)
tt<-tt[tt$SPEC %in% c(204,203,1191),]
tt<- merge(tt, GSMISSIONS, by=c("MISSION"), all.x=T)
tt <- tt[tt$FLEN <= 40,]
tt<-tt[,c("YEAR", "SEASON", "SPEC", "CLEN")]
tt_spring <- tt[tt$SEASON %in% "SPRING",]
tt_summer <- tt[tt$SEASON %in% "SUMMER",]
tt_spring <- tt_spring %>%
group_by(YEAR, SPEC) %>%
summarise(CLEN = sum(CLEN))
tt_spring<-reshape2::dcast(tt_spring, YEAR ~ SPEC, value.var = "CLEN")
View(tt_spring)
tt_summer <- tt_summer %>%
group_by(YEAR, SPEC) %>%
summarise(CLEN = sum(CLEN))
tt_summer<-reshape2::dcast(tt_summer, YEAR ~ SPEC, value.var = "CLEN")
View(tt_summer)
tt<- merge(GSDET, GSINF, by=c("MISSION"), all.x=T)
tt<- merge(tt, GSMISSIONS, by=c("MISSION"), all.x=T)
tt<- GSDET
names(tt)
tt<- tt[!is.na(tt$FWT),c("MISSION", "SETNO", "FWT")]
head(tt)
range(tt$FWT)
fathoms_to_meters <- function(field = NULL) {
field <- round(field*1.8288,2)
return(field)
}
DDMM_to_DDDD <- function(field = NULL){
dfNm <-deparse(substitute(field))
field <- (as.numeric(substr(field,1,2)) +(field - as.numeric(substr(field,1,2))*100)/60)
if (grepl("LONG", dfNm)) field <- field*-1
field <- round(field,6)
return(field)
}
library(purrr)
library(dplyr)
library(devtools)
allTbls = c("GSAUX", "GSCAT", "GSCURNT", "GSDET",
"GSFORCE", "GSGEAR", "GSHOWOBT", "GSINF", "GSMATURITY",
"GSMISSIONS", "GSSEX","GSSPEC", "GSSPECIES",
"GSSTRATUM", "GSWARPOUT", "GSXTYPE",
"GSSPECIES_20220624", "GSSPECIES_TAX")
library(RVTransmogrifier)
res<-loadRVData()
View(GSSPECIES)
head(res$GSCAT)
head(res$GSDET)
#herring
herring<- res$GSDET[res$GSDET$SPEC==60,]
View(herring)
herring <- herring[,c("MISSION", "FLEN", "CLEN")]
herring<- merge(herring, res$GSMISSIONS[,c("MISSION", "YEAR", "SEASON")], all.x = T, by="MISSION")
head(herring)
herring <- herring %>%
group_by(MISSION, YEAR, SEASON) %>%
summarise(FLEN = mean(FLEN))
View(herring)
View(herring[herring$SEASON=="SUMMER",])
plot(herring[herring$MISSION=="NED2016116","FLEN"])
plot(res$GSDET[res$GSDET$SPEC==60 & res$GSDET$MISSION=="NED2016116","YEAR"],
res$GSDET[res$GSDET$SPEC==60 & res$GSDET$MISSION=="NED2016116","FLEN"])
length(res$GSDET[res$GSDET$SPEC==60 & res$GSDET$MISSION=="NED2016116","YEAR"])
names(GSDET)
head(GSDET)
plot(res$GSDET[res$GSDET$SPEC==60 & res$GSDET$MISSION=="NED2016116","FWT"],
res$GSDET[res$GSDET$SPEC==60 & res$GSDET$MISSION=="NED2016116","FLEN"])
range(res$GSDET[res$GSDET$SPEC==60 & res$GSDET$MISSION=="NED2016116","FWT"])
range(res$GSDET[res$GSDET$SPEC==60 & res$GSDET$MISSION=="NED2016116","FLEN"])
plot(res$GSDET[!is.na(res$GSDET$FWT) & res$GSDET$SPEC==60 & res$GSDET$MISSION=="NED2016116","FWT"],
res$GSDET[!is.na(res$GSDET$FWT) &res$GSDET$SPEC==60 & res$GSDET$MISSION=="NED2016116","FLEN"])
plot(res$GSDET[!is.na(res$GSDET$FWT) & res$GSDET$SPEC==60 & res$GSDET$MISSION=="NED2016116","FWT"],
res$GSDET[!is.na(res$GSDET$FWT) &res$GSDET$SPEC==60 & res$GSDET$MISSION=="NED2016116","FLEN"])
range(res$GSDET[!is.na(res$GSDET$FWT) & res$GSDET$SPEC==60 & res$GSDET$MISSION=="NED2016116","FWT"])
sort(unique(res$GSDET[!is.na(res$GSDET$FWT) & res$GSDET$SPEC==60 & res$GSDET$MISSION=="NED2016116","FWT"]))
head(res$GSDET)
#herring
herring<- res$GSDET[res$GSDET$SPEC==60,]
herring <- herring[,c("MISSION", "FLEN", "CLEN")]
herring<- herring[!is.na(herring$FLEN),]
herring<- herring[herring$MISSION %in% c("NED2016016","NED2016116","NED2017020"),]
#herring
herring<- res$GSDET[res$GSDET$SPEC==60,]
herring <- herring[,c("MISSION", "FLEN", "FWT")]
herring<- herring[!is.na(herring$FLEN),]
range(herring$FWT)
range(herring$FLEN)
herring<- herring[!is.na(herring$FWT),]
herring<- herring[herring$MISSION %in% c("NED2016016","NED2016116","NED2017020"),]
plot(herring$MISSION=="NED2016116","FWT"],
herring$MISSION=="NED2016116","FLEN"])
# herring<- merge(herring, res$GSMISSIONS[,c("MISSION", "YEAR", "SEASON")], all.x = T, by="MISSION")
plot(herring[herring$MISSION=="NED2016116","FWT"], herring[herring$MISSION=="NED2016116","FLEN"])
herring[herring$MISSION=="NED2016116","FWT"]
herring[herring$MISSION=="NED2016116","FLEN"]
unique(herring$MISSION)
# herring<- merge(herring, res$GSMISSIONS[,c("MISSION", "YEAR", "SEASON")], all.x = T, by="MISSION")
plot(herring[herring$MISSION=="NED2016016","FWT"], herring[herring$MISSION=="NED2016016","FLEN"])
plot(herring[herring$MISSION=="NED2017020","FWT"], herring[herring$MISSION=="NED2017020","FLEN"])
#herring
herring<- res$GSDET[res$GSDET$SPEC==60,]
herring <- herring[,c("MISSION", "FLEN", "FWT")]
herring<- herring[!is.na(herring$FLEN),]
herring<- herring[!is.na(herring$FWT),]
sort(unique(herring$MISSION))
# herring<- merge(herring, res$GSMISSIONS[,c("MISSION", "YEAR", "SEASON")], all.x = T, by="MISSION")
plot(herring[herring$MISSION=="NED2015017","FWT"], herring[herring$MISSION=="NED2015017","FLEN"])
# herring<- merge(herring, res$GSMISSIONS[,c("MISSION", "YEAR", "SEASON")], all.x = T, by="MISSION")
plot(herring[herring$MISSION=="NED2015002","FWT"], herring[herring$MISSION=="NED2015002","FLEN"])
#cm plot(herring[herring$MISSION=="NED2015002","FWT"], herring[herring$MISSION=="NED2015002","FLEN"])
#cm plot(herring[herring$MISSION=="NED2015017","FWT"], herring[herring$MISSION=="NED2015017","FLEN"])
plot(herring[herring$MISSION=="TEL2016002","FWT"], herring[herring$MISSION=="TEL2016002","FLEN"])
#cm plot(herring[herring$MISSION=="NED2015002","FWT"], herring[herring$MISSION=="NED2015002","FLEN"])
#cm plot(herring[herring$MISSION=="NED2015017","FWT"], herring[herring$MISSION=="NED2015017","FLEN"])
#cm plot(herring[herring$MISSION=="TEL2016002","FWT"], herring[herring$MISSION=="TEL2016002","FLEN"])
plot(herring[herring$MISSION=="TEL2016003","FWT"], herring[herring$MISSION=="TEL2016003","FLEN"])
#cm plot(herring[herring$MISSION=="NED2015002","FWT"], herring[herring$MISSION=="NED2015002","FLEN"])
#cm plot(herring[herring$MISSION=="NED2015017","FWT"], herring[herring$MISSION=="NED2015017","FLEN"])
#cm plot(herring[herring$MISSION=="TEL2016002","FWT"], herring[herring$MISSION=="TEL2016002","FLEN"])
#cm plot(herring[herring$MISSION=="TEL2016003","FWT"], herring[herring$MISSION=="TEL2016003","FLEN"])
plot(herring[herring$MISSION=="TEL2017002","FWT"], herring[herring$MISSION=="TEL2017002","FLEN"])
View(res$GSMISSIONS)
#cm plot(herring[herring$MISSION=="NED2015002","FWT"], herring[herring$MISSION=="NED2015002","FLEN"])
#cm plot(herring[herring$MISSION=="NED2015017","FWT"], herring[herring$MISSION=="NED2015017","FLEN"])
#cm plot(herring[herring$MISSION=="TEL2016002","FWT"], herring[herring$MISSION=="TEL2016002","FLEN"])
#cm plot(herring[herring$MISSION=="TEL2016003","FWT"], herring[herring$MISSION=="TEL2016003","FLEN"])
#mm plot(herring[herring$MISSION=="NED2016016","FWT"], herring[herring$MISSION=="NED2016016","FLEN"])
#mm plot(herring[herring$MISSION=="TEL2017002","FWT"], herring[herring$MISSION=="TEL2017002","FLEN"])
#mm plot(herring[herring$MISSION=="NED2017020","FWT"], herring[herring$MISSION=="NED2017020","FLEN"])
res$GSMISSIONS[with(res$GSMISSIONS,order(YEAR, CRUNO)),]
#GSDET
#NED 2016016 - first cruise sp 60 in mm
res$GSMISSIONS[res$GSMISSIONS$YEAR >= 2016 && !(res$GSMISSIONS$CRUNO %in% c(2,3)) ,]
#GSDET
#NED 2016016 - first cruise sp 60 in mm
res$GSMISSIONS[res$GSMISSIONS$YEAR >= 2016 ,]
#GSDET
#NED 2016016 - first cruise sp 60 in mm
res$GSMISSIONS[res$GSMISSIONS$YEAR >= 2016 & res$GSMISSIONS$MISSION %in% c("TEL2016002","TEL2016003"),]
#GSDET
#NED 2016016 - first cruise sp 60 in mm
res$GSMISSIONS[res$GSMISSIONS$YEAR >= 2016 & !res$GSMISSIONS$MISSION %in% c("TEL2016002","TEL2016003"),]
#GSDET
#NED 2016016 - first cruise sp 60 in mm
View(res$GSMISSIONS[res$GSMISSIONS$YEAR <= 2016 & !res$GSMISSIONS$MISSION %in% c("NED2016116","NED2016016"),])
head(res$GSDET[substr(res$GSDET$MISSION,4,7) <= 2016 & !res$GSDET$MISSION %in% c("NED2016116","NED2016016"),])
sort(unique(res$GSDET[substr(res$GSDET$MISSION,4,7) <= 2016 & !res$GSDET$MISSION %in% c("NED2016116","NED2016016"),"MISSION"]))
head(  res$GSDET[substr(res$GSDET$MISSION,4,7) <= 2016 &
!res$GSDET$MISSION %in% c("NED2016116","NED2016016") &
!is.na(res$GSDET$FLEN),"FLEN"])
res$GSDET[substr(res$GSDET$MISSION,4,7) <= 2016 &
!res$GSDET$MISSION %in% c("NED2016116","NED2016016") &
!is.na(res$GSDET$FLEN),"FLEN"] <- res$GSDET[substr(res$GSDET$MISSION,4,7) <= 2016 &
!res$GSDET$MISSION %in% c("NED2016116","NED2016016") &
!is.na(res$GSDET$FLEN),"FLEN"]*10
plot(herring[herring$MISSION=="NED2015002","FWT"], herring[herring$MISSION=="NED2015002","FLEN"])
plot(herring[herring$MISSION=="NED2015017","FWT"], herring[herring$MISSION=="NED2015017","FLEN"])
plot(herring[herring$MISSION=="TEL2016002","FWT"], herring[herring$MISSION=="TEL2016002","FLEN"])
plot(herring[herring$MISSION=="TEL2016003","FWT"], herring[herring$MISSION=="TEL2016003","FLEN"])
plot(herring[herring$MISSION=="NED2016016","FWT"], herring[herring$MISSION=="NED2016016","FLEN"])
plot(herring[herring$MISSION=="TEL2017002","FWT"], herring[herring$MISSION=="TEL2017002","FLEN"])
plot(herring[herring$MISSION=="NED2017020","FWT"], herring[herring$MISSION=="NED2017020","FLEN"])
herring<- res$GSDET[res$GSDET$SPEC==60,]
herring <- herring[,c("MISSION", "FLEN", "FWT")]
herring<- herring[!is.na(herring$FLEN),]
herring<- herring[!is.na(herring$FWT),]
plot(herring[herring$MISSION=="NED2015002","FWT"], herring[herring$MISSION=="NED2015002","FLEN"])
plot(herring[herring$MISSION=="NED2015017","FWT"], herring[herring$MISSION=="NED2015017","FLEN"])
plot(herring[herring$MISSION=="TEL2016002","FWT"], herring[herring$MISSION=="TEL2016002","FLEN"])
plot(herring[herring$MISSION=="TEL2016003","FWT"], herring[herring$MISSION=="TEL2016003","FLEN"])
plot(herring[herring$MISSION=="NED2016016","FWT"], herring[herring$MISSION=="NED2016016","FLEN"])
plot(herring[herring$MISSION=="TEL2017002","FWT"], herring[herring$MISSION=="TEL2017002","FLEN"])
plot(herring[herring$MISSION=="NED2017020","FWT"], herring[herring$MISSION=="NED2017020","FLEN"])
View(GSSPECIES)
grenadiers <- GSSPECIES[grepl(x = GSSPECIES$COMM, pattern = "GRENADIER"), "CODE"]
grenadiers
grenadiers <- res$GSDET[res$GSDET$SPEC %in% grenadiers,]
grenadiers <- grenadiers [!is.na(grenadiers$FWT),]
grenadiers <- grenadiers [!is.na(grenadiers$FLEN),]
grenadiers <<- grenadiers [!is.na(grenadiers$FLEN),]
shiny::runApp('C:/git/Mar.JoyofQC')
grenadiers$YEAR <- substr(grenadiers$MISSION, 4,7)
head(grenadiers)
grenadiers$YEAR <<- substr(grenadiers$MISSION, 4,7)
grenadiers$YEAR <<- substr(grenadiers$MISSION, 4,7)
grenadiers <- GSSPECIES[grepl(x = GSSPECIES$COMM, pattern = "GRENADIER"), "CODE"]
grenadiers <- res$GSDET[res$GSDET$SPEC %in% grenadiers,]
grenadiers <- grenadiers [!is.na(grenadiers$FWT),]
grenadiers <- grenadiers [!is.na(grenadiers$FLEN),]
grenadiers <<- grenadiers [!is.na(grenadiers$FLEN),]
grenadiers$YEAR <<- substr(grenadiers$MISSION, 4,7)
# Grenadiers
grenadiers <- GSSPECIES[grepl(x = GSSPECIES$COMM, pattern = "GRENADIER"), "CODE"]
grenadiers <- res$GSDET[res$GSDET$SPEC %in% grenadiers,]
grenadiers <- grenadiers [!is.na(grenadiers$FWT),]
grenadiers <- grenadiers [!is.na(grenadiers$FLEN),]
grenadiers <- grenadiers [!is.na(grenadiers$FLEN),]
grenadiers$YEAR <<- substr(grenadiers$MISSION, 4,7)
# Grenadiers
grenadiers <- GSSPECIES[grepl(x = GSSPECIES$COMM, pattern = "GRENADIER"), "CODE"]
grenadiers <- res$GSDET[res$GSDET$SPEC %in% grenadiers,]
grenadiers <- grenadiers[!is.na(grenadiers$FWT),]
grenadiers <- grenadiers[!is.na(grenadiers$FLEN),]
grenadiers <- grenadiers[!is.na(grenadiers$FLEN),]
head(grenadiers)
substr(grenadiers$MISSION, 4,7)
grenadiers$YEAR <- numeric(substr(grenadiers$MISSION, 4,7))
grenadiers$YEAR <- as.numeric(substr(grenadiers$MISSION, 4,7))
head(grenadiers)
grenadiers <<- grenadiers
runApp('C:/git/Mar.JoyofQC')
grenadiers<-grenadiers[grenadiers$YEAR>=2010,]
grenadiers <<- grenadiers
runApp('C:/git/Mar.JoyofQC')
runApp('C:/git/Mar.JoyofQC')
View(res$GSDET[is.na(res$GSDET$FWT),])
Don <- res$GSDET
Don <- Don[Don$SPEC>1000 & is.na(Don$FWT) & !is.na(Don$FLEN),]
View(Don)
Don <- res$GSDET
Don <- Don[Don$SPEC<1000 & is.na(Don$FWT) & !is.na(Don$FLEN),]
head(Don)
Don <- res$GSDET
Don <- Don[Don$SPEC<1000 & !is.na(Don$FLEN),]
Don$TOTWGTchk<- ifelse(!is.na(Don$FWT) & Don$FWT>0,yes = 99, ifelse(is.na(tt$FWT),NA,0))
head(Don)
Don<- merge(GSMISSIONS, Don, all.y = T)
Don<- Don[,c("SEASON","YEAR", "TOTWGTchk")]
DonSPRING <- Don[Don$SEASON=="SPRING",c("TOTWGTchk", "YEAR")]
DonSUMMER <- Don[Don$SEASON=="SUMMER",c("TOTWGTchk", "YEAR")]
S
cnames <- c("YEAR","VAL","FREQ")
SPRINGfreq<-data.frame(table(SPRING$YEAR, SPRING$TOTWGTchk))
names(SPRINGfreq) <- cnames
SPRINGfreq<- SPRINGfreq[SPRINGfreq$VAL == 0,]
SPRINGfreq<-data.frame(table(DonSPRING$YEAR, DonSPRING$TOTWGTchk))
names(SPRINGfreq) <- cnames
SPRINGfreq<- SPRINGfreq[SPRINGfreq$VAL == 0,]
SUMMERfreq<-data.frame(table(DonSUMMER$YEAR, DonSUMMER$TOTWGTchk))
names(SUMMERfreq) <- cnames
SUMMERfreq<- SUMMERfreq[SUMMERfreq$VAL == 0,]
View(SPRINGfreq)
View(DonSUMMER)
View(SUMMERfreq)
plot(SPRINGfreq$YEAR, SPRINGfreq$FREQ)
plot(SUMMERfreq$YEAR, SUMMERfreq$FREQ)
Don <- res$GSDET
Don <- Don[Don$SPEC<1000 & !is.na(Don$FLEN),]
Don$TOTWGTchk<- ifelse(!is.na(Don$FWT) & Don$FWT>0,yes = 99, ifelse(is.na(tt$FWT),0,-1))
Don<- merge(GSMISSIONS, Don, all.y = T)
Don<- Don[,c("SEASON","YEAR", "TOTWGTchk")]
DonSPRING <- Don[Don$SEASON=="SPRING",c("TOTWGTchk", "YEAR")]
DonSUMMER <- Don[Don$SEASON=="SUMMER",c("TOTWGTchk", "YEAR")]
cnames <- c("YEAR","VAL","FREQ")
SPRINGfreq<-data.frame(table(DonSPRING$YEAR, DonSPRING$TOTWGTchk))
names(SPRINGfreq) <- cnames
SPRINGfreq<- SPRINGfreq[SPRINGfreq$VAL == 0,]
SUMMERfreq<-data.frame(table(DonSUMMER$YEAR, DonSUMMER$TOTWGTchk))
names(SUMMERfreq) <- cnames
SUMMERfreq<- SUMMERfreq[SUMMERfreq$VAL == 0,]
plot(SPRINGfreq$YEAR, SPRINGfreq$FREQ)
head(SPRINGfreq)
View(DonSPRING)
View(DonSPRING)
Don <- res$GSDET
Don <- Don[Don$SPEC<1000 & !is.na(Don$FLEN),]
Don$TOTWGTchk<- ifelse(!is.na(Don$FWT) & Don$FWT>0,yes = 99, ifelse(is.na(tt$FWT),0,-1))
head(Don)
head(res$GSMISSIONS)
Don<- merge(res$GSMISSIONS, Don, all.y = T)
Don<- Don[,c("SEASON","YEAR", "TOTWGTchk")]
DonSPRING <- Don[Don$SEASON=="SPRING",c("TOTWGTchk", "YEAR")]
DonSUMMER <- Don[Don$SEASON=="SUMMER",c("TOTWGTchk", "YEAR")]
cnames <- c("YEAR","VAL","FREQ")
SPRINGfreq<-data.frame(table(DonSPRING$YEAR, DonSPRING$TOTWGTchk))
names(SPRINGfreq) <- cnames
SPRINGfreq<- SPRINGfreq[SPRINGfreq$VAL == 0,]
SUMMERfreq<-data.frame(table(DonSUMMER$YEAR, DonSUMMER$TOTWGTchk))
names(SUMMERfreq) <- cnames
SUMMERfreq<- SUMMERfreq[SUMMERfreq$VAL == 0,]
SPRINGfreq<-data.frame(table(DonSPRING$YEAR, DonSPRING$TOTWGTchk))
View(SPRINGfreq)
Don <- res$GSDET
Don <- Don[Don$SPEC<1000 & !is.na(Don$FLEN),]
Don$TOTWGTchk<- ifelse(!is.na(Don$FWT) & Don$FWT>0,yes = 99, ifelse(is.na(Don$FWT),0,-1))
Don<- merge(res$GSMISSIONS, Don, all.y = T)
Don<- Don[,c("SEASON","YEAR", "TOTWGTchk")]
DonSPRING <- Don[Don$SEASON=="SPRING",c("TOTWGTchk", "YEAR")]
DonSUMMER <- Don[Don$SEASON=="SUMMER",c("TOTWGTchk", "YEAR")]
cnames <- c("YEAR","VAL","FREQ")
SPRINGfreq<-data.frame(table(DonSPRING$YEAR, DonSPRING$TOTWGTchk))
names(SPRINGfreq) <- cnames
SPRINGfreq<- SPRINGfreq[SPRINGfreq$VAL == 0,]
SUMMERfreq<-data.frame(table(DonSUMMER$YEAR, DonSUMMER$TOTWGTchk))
names(SUMMERfreq) <- cnames
SUMMERfreq<- SUMMERfreq[SUMMERfreq$VAL == 0,]
plot(SPRINGfreq$YEAR, SPRINGfreq$FREQ)
plot(SUMMERfreq$YEAR, SUMMERfreq$FREQ)
View(SPRINGfreq)
Don <- res$GSDET
Don <- Don[Don$SPEC<1000 & !is.na(Don$FLEN),]
Don$TOTWGTchk<- ifelse(!is.na(Don$FWT) & Don$FWT>0,yes = 99, ifelse(is.na(Don$FWT),0,-1))
Don<- merge(res$GSMISSIONS, Don, all.y = T)
Don<- Don[,c("SEASON","YEAR", "FLEN","TOTWGTchk")]
DonSPRING <- Don[Don$SEASON=="SPRING",c("TOTWGTchk", "FLEN", "YEAR")]
DonSUMMER <- Don[Don$SEASON=="SUMMER",c("TOTWGTchk", "FLEN", "YEAR")]
head(DonSPRING)
Don <- res$GSDET
Don <- Don[Don$SPEC<1000 & !is.na(Don$FLEN),]
Don$TOTWGTchk<- ifelse(!is.na(Don$FWT) & Don$FWT>0,yes = 99, ifelse(is.na(Don$FWT),0,-1))
Don<- merge(res$GSMISSIONS, Don, all.y = T)
Don<- Don[,c("SEASON","YEAR", "FLEN","CLEN","TOTWGTchk")]
DonSPRING <- Don[Don$SEASON=="SPRING",c("TOTWGTchk", "FLEN", "CLEN","YEAR")]
DonSUMMER <- Don[Don$SEASON=="SUMMER",c("TOTWGTchk", "FLEN", "CLEN","YEAR")]
head(DonSPRING)
range(DonSPRING$CLEN)
Don <- res$GSDET
Don <- Don[Don$SPEC<1000 & !is.na(Don$FLEN) & !is.na(Don$CLEN),]
Don$TOTWGTchk<- ifelse(!is.na(Don$FWT) & Don$FWT>0,yes = 99, ifelse(is.na(Don$FWT),0,-1))
Don<- merge(res$GSMISSIONS, Don, all.y = T)
Don<- Don[,c("SEASON","YEAR", "FLEN","TOTWGTchk")]
DonSPRING <- Don[Don$SEASON=="SPRING",c("TOTWGTchk", "FLEN","YEAR")]
DonSUMMER <- Don[Don$SEASON=="SUMMER",c("TOTWGTchk", "FLEN","YEAR")]
cnames <- c("YEAR","VAL","FREQ")
SPRINGfreq<-data.frame(table(DonSPRING$YEAR, DonSPRING$TOTWGTchk))
names(SPRINGfreq) <- cnames
SPRINGfreq<- SPRINGfreq[SPRINGfreq$VAL == 0,]
SUMMERfreq<-data.frame(table(DonSUMMER$YEAR, DonSUMMER$TOTWGTchk))
names(SUMMERfreq) <- cnames
SUMMERfreq<- SUMMERfreq[SUMMERfreq$VAL == 0,]
plot(SUMMERfreq$YEAR, SUMMERfreq$FREQ)
plot(SPRINGfreq$YEAR, SPRINGfreq$FREQ)
unique(GSDET$MISSIO)
unique(GSDET$MISSI)
unique(GSDET$M)
unique(GSDET
)
cleantheGarbage(keep = res)
library(RVSurveyData)
library(RVTransmogrifier
)
res <- loadRVData()
res$GSMISSIONS
test <- res$GSDET[res$GSDET$MISSION=="CAR2021241",]
View(test)
test <- test[test$SETNO==19,]
test <- test[test$SPEC = 11,]
test <- test[test$SPEC == 11,]
# find all of the
tt <- res$GSDET
setsWSizeClasses <- unique(tt[tt$SIZE_CLASS>1, c("MISSION", "SETNO")])
View(setsWSizeClasses)
setsWSizeClasses <- unique(tt[tt$SIZE_CLASS>1, c("MISSION", "SETNO","SIZE_CLASS")])
View(setsWSizeClasses)
#add sizeclass 1
sc1<- unique(setsWSizeClasses[,c("MISSION", "SETNO")])
sc1$SIZE_CLASS = 1
setsWSizeClasses<- rbind.data.frame(setsWSizeClasses,sc1)
View(setsWSizeClasses)
MikeIt()
setsWSizeClasses = setsWSizeClasses[with(setsWSizeClasses, order(MISSION, SETNO, SIZE_CLASS)), ]
View(setsWSizeClasses)
rm(sc1)
allTbls<- c("GSCAT","GSDET")
fn.oracle.username=oracle.username
fn.oracle.password=oracle.password
fn.oracle.dsn = "PTRAN"
# make connection and extract all data to a list
con <- ROracle::dbConnect(DBI::dbDriver("Oracle"), fn.oracle.username, fn.oracle.password, fn.oracle.dsn)
res <- lapply(allTbls,
function(myTable){
sqlStatement <- paste0("select * from GROUNDFISH.",myTable)
ROracle::dbGetQuery(con, sqlStatement)
})
names(res)<- allTbls
head(res$GSCAT)
# find all of the MISSION/SETNO combos that have size class considerations
tt <- res$GSDET
setsWSizeClasses <- unique(tt[tt$SIZE_CLASS>1, c("MISSION", "SETNO","SPEC","SIZE_CLASS")])
#add sizeclass 1
sc1<- unique(setsWSizeClasses[,c("MISSION", "SETNO", "SPEC")])
sc1$SIZE_CLASS = 1
setsWSizeClasses<- rbind.data.frame(setsWSizeClasses,sc1)
head(setsWSizeClasses)
rm(sc1)
setsWSizeClasses = setsWSizeClasses[with(setsWSizeClasses, order(MISSION, SETNO, SIZE_CLASS)), ]
head(res$GSCAT)
ratioData <- res$GSCAT[paste0(res$GSCAT$MISSION,"_",res$GSCAT$SETNO,"_", res$GSCAT$SPEC,"_", res$GSCAT$SIZE_CLASS) %in%
paste0(setsWSizeClasses$MISSION,"_",setsWSizeClasses$SETNO,"_", setsWSizeClasses$SPEC,"_", setsWSizeClasses$SIZE_CLASS),
c("MISSION", "SETNO", "SPEC", "SIZE_CLASS", "SAMPWGT","TOTWGT", "TOTNO") ]
head(ratioData)
head(tt)
tt <- res$GSDET
setsWSizeClasses <- unique(tt[tt$SIZE_CLASS>1, c("MISSION", "SETNO","SPEC")])
head(setsWSizeClasses)
setsWSizeClasses <- unique(tt[tt$SIZE_CLASS>1, c("MISSION", "SETNO","SPEC")])
ratioData <- res$GSCAT[paste0(res$GSCAT$MISSION,"_",res$GSCAT$SETNO,"_", res$GSCAT$SPEC) %in%
paste0(setsWSizeClasses$MISSION,"_",setsWSizeClasses$SETNO,"_", setsWSizeClasses$SPEC),
c("MISSION", "SETNO", "SPEC", "SIZE_CLASS", "SAMPWGT","TOTWGT", "TOTNO") ]
head(ratioData)
chk <- merge(tt, ratioData, all.x=T, by = c("MISSION", "SETNO", "SPEC", "SIZE_CLASS"))
head(chk)
View(chk)
chk$RATIO <- (chk$TOTNO/chk$SAMPWGT)*chk$CLEN
chk$RATIO <- (chk$TOTWGT/chk$SAMPWGT)*chk$CLEN
chk$RATIO <- (chk$TOTWGT/chk$SAMPWGT)*chk$TOTNO
chk$RATIO <- (chk$TOTWGT/chk$SAMPWGT)/chk$TOTNO
chk$RATIO <- (chk$TOTWGT/chk$SAMPWGT)*chk$TOTNO
chk$RATIO <- (chk$TOTWGT/chk$SAMPWGT)/chk$TOTNO
chk$RATIO <- (chk$TOTWGT/chk$SAMPWGT)*chk$CLEN
chk<-chk[!is.na(chk$RATIO),]
tt <- res$GSDET
setsWSizeClasses <- unique(tt[tt$SIZE_CLASS>1, c("MISSION", "SETNO","SPEC")])
ratioData <- res$GSCAT[paste0(res$GSCAT$MISSION,"_",res$GSCAT$SETNO,"_", res$GSCAT$SPEC) %in%
paste0(setsWSizeClasses$MISSION,"_",setsWSizeClasses$SETNO,"_", setsWSizeClasses$SPEC),
c("MISSION", "SETNO", "SPEC", "SIZE_CLASS", "SAMPWGT","TOTWGT") ]
chk <- merge(tt, ratioData, all.x=T, by = c("MISSION", "SETNO", "SPEC", "SIZE_CLASS"))
chk$CLEN2 <- (chk$TOTWGT/chk$SAMPWGT)*chk$CLEN
chk<-chk[!is.na(chk$RATIO),]
chk<-chk[!is.na(chk$CLEN2),]
tt <- res$GSDET
setsWSizeClasses <- unique(tt[tt$SIZE_CLASS>1, c("MISSION", "SETNO","SPEC")])
ratioData <- res$GSCAT[paste0(res$GSCAT$MISSION,"_",res$GSCAT$SETNO,"_", res$GSCAT$SPEC) %in%
paste0(setsWSizeClasses$MISSION,"_",setsWSizeClasses$SETNO,"_", setsWSizeClasses$SPEC),
c("MISSION", "SETNO", "SPEC", "SIZE_CLASS", "SAMPWGT","TOTWGT") ]
chk <- merge(tt, ratioData, all.x=T, by = c("MISSION", "SETNO", "SPEC", "SIZE_CLASS"))
chk$CLEN2 <- (chk$TOTWGT/chk$SAMPWGT)*chk$CLEN
chk<-chk[!is.na(chk$CLEN2),]
View(chk)
chk<-chk[,c("MISSION","SETNO","SPEC", "SIZE_CLASS", "FLEN", "CLEN", "SAMPWGT", "TOTWGT","CLEN2")]
example_list <- list(data.frame(x = 1:5, y = 5:1),                       # Constructing list object
LETTERS[15:7],
"yayaya")
names(exampl)
names(example_list)
names(example_list) <- paste0("My_Element_No_", 1:length(example_list))
names(example_list)
names(example_list)[1] <- "AA"
names(example_list)
names(example_list$AA) <- "BB"
names(example_list)
names(example_list)[names(example_list) == "AA"] <- "new.name"
names(example_list)
source("C:/git/PopulationEcologyDivision/RVSurveyData/inst/updateRVSurveyData.R")
source("C:/git/PopulationEcologyDivision/RVSurveyData/inst/updateRVSurveyData.R")
source("C:/git/PopulationEcologyDivision/RVSurveyData/inst/updateRVSurveyData.R")
source("C:/git/PopulationEcologyDivision/RVSurveyData/inst/updateRVSurveyData.R")
source("C:/git/PopulationEcologyDivision/RVSurveyData/inst/updateRVSurveyData.R")
devtools::document()
updateRVSurveyData(fn.oracle.username = oracle.username, fn.oracle.password = oracle.password, fn.oracle.dsn = oracle.dsn)
devtools::document()
remove.packages("RVSurveyData", lib="~/R/win-library/4.1")
devtools::document()
library(RVSurveyData)
devtools::document()
updateData<-function(tbls= c("GSSPECIES_20220624"),
fn.oracle.username=oracle.username,
fn.oracle.password=oracle.password,
fn.oracle.dsn = "PTRAN"){
# make connection and extract all data to a list
con <- ROracle::dbConnect(DBI::dbDriver("Oracle"), fn.oracle.username, fn.oracle.password, fn.oracle.dsn)
res <- lapply(tbls,
function(myTable){
sqlStatement <- paste0("select * from GROUNDFISH.",myTable)
ROracle::dbGetQuery(con, sqlStatement)
})
names(res)<- tbls
return(res)
}
res <- updateData()
res$GSSPECIES_20220624$N_OCCURENCES_GSCAT <- NULL
res$GSSPECIES_20220624$ENTR <- NULL
head(res$GSSPECIES_20220624)
#rename the new species table to GSSPECIES
names(res)[names(res) == "GSSPECIES_20220624"] <- "GSSPECIES"
purrr::walk2(res, names(res), function(obj, name) {
assign(name, obj)
do.call("use_data", list(as.name(name), overwrite = TRUE))
})
load("C:/git/PopulationEcologyDivision/RVSurveyData/data/GSSPECIES.rda")
devtools::document()
devtools::document()
devtools::document()
tools::buildVignettes(dir = ".", tangle=TRUE)
# dir.create("inst/doc")
file.copy(dir("vignettes", full.names=TRUE), "inst/doc", overwrite=TRUE)
devtools::document()
devtools::document()
devtools::document()
